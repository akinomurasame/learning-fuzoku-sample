# review-epubmaker-ng向けYAMLファイルのサンプル
#
# このファイルはUTF-8エンコーディングで記述してください
# YAMLにおける空は、「nil」ではなく「null」であることに注意してください

# ブック名(ファイル名になるもの。ASCII範囲の文字を使用)
bookname: learning-fuzoku-sample
# 記述言語
language: ja
# 書名
## title を使うと書名が Re:VIEW サンプルになる。
# title: "Fuzoku実践入門"
booktitle: "Fuzoku実践入門（サンプル）"

# 固有IDに使用するドメイン。指定しない場合には、時刻に基づくランダムUUIDが入る
# urnid: urn:uid:http://example.com/some-book-title/1.0.2/

# ISBN。省略した場合はランダム生成したUUIDが入る
# isbn: null

# 著者名。「, 」で区切って複数指定できる
aut: "村雨 秋乃"

# 以下はオプション(autと同じように配列書式で複数指定可能)。
# a-が付いているものはcreator側、
# 付いていないものはcontributor側(二次協力者)に入る
# a-adp, adp: 異なるメディア向けに作り直した者
# a-ann, ann: 注釈記述者
# a-arr, arr: アレンジした者
# a-art, art: グラフィックデザインおよび芸術家
# a-asn, asn: 関連・かつての所有者・関係者
# a-aqt, aqt: 大きく引用された人物
# a-aft, aft: 後書き・奥付の責任者
# a-aui, aui: 序論・序文・前書きの責任者
# a-ant, ant: 目録責任者
# a-bkp, bkp: メディア制作責任者
# a-clb, clb: 限定参加または補足者
# a-cmm, cmm: 解釈・分析・考察者
# a-dsr, dsr: デザイナ
# a-edt, edt: 編集者
# a-ill, ill: イラストレータ
# a-lyr, lyr: 歌詞作成者
# a-mdc, mdc: メタデータセットの一次的責任者
# a-mus, mus: 音楽家
# a-nrt, nrt: 語り手
# a-oth, oth: その他
# a-pht, pht: 撮影責任者
# a-prt, prt: 出版社
prt: "夜の技評"
# a-red, red: 項目の枠組起草者
# a-rev, rev: 評論者
# a-spn, spn: 援助者
# a-ths, ths: 監督者
# a-trc, trc: 筆記・タイプ作業者
# a-trl, trl: 翻訳者

rights: "© 2014 村雨秋乃"
date: "2014-11-01"
# description: 説明
# subject: 短い説明用タグ(配列で複数指定可)
# type: 書籍のカテゴリーなど(配列で複数指定可)
# format: メディアタイプおよび特徴(配列で複数指定可)
# source: 出版物生成の重要なリソース情報(配列で複数指定可)
# relation: 補助的リソース(配列で複数指定可)
# coverage: 内容の範囲や領域(配列で複数指定可)

# htmlext: HTMLファイルの拡張子(省略した場合はhtml)
#
# CSSファイル(配列で複数指定可)
stylesheet: ["main.css"]

# ePUBのバージョン (2か3)
epubversion: 3
# HTMLのバージョン (4か5。epubversionを3にしたときには5にする)
htmlversion: 5 # これを付けないと、epub 作成時にエラーが出る 1.3.0

# 目次として抽出する見出しレベル
toclevel: 3
# 目次を要素の階層表現にしない。省略した場合(null)は階層化する。
# 特に部扉が入るなどの理由で、構成によっては階層化目次でepubcheckに
# パスしない目次ができるが、そのようなときにはこれをtrueにする
# flattoc: null
# 目次のインデントレベルをスペース文字で表現する(flattocがtrueのときのみ)
# flattocindent: true

# 採番の設定。採番させたくない見出しには「==[nonum]」のようにnonum指定をする
#
# 本文でセクション番号を表示する見出しレベル
secnolevel: 3

# 付録の連番のスタイル。null(アラビア数字1〜。デフォルト)、alpha(英字A〜)、roman(ローマ数字I〜)
# appendix_format: null
appendix_format: alpha

# 以下のsecnolevelはまだ未実装。
# 前付でセクション番号を表示する見出しレベル(未実装)
# pre_secnolevel: 0
# 後付(付録)でセクション番号を表示する見出しレベル(未実装)
# post_secnolevel: 1
# 部番号を表示する見出しレベル(未実装)
# part_secnolevel: 1

# NCX目次の見出しレベルごとの飾り(配列で設定)。EPUB3ではNCXは作られない
#ncxindent:
#-
#- -

# EPUB2標準の目次以外に物理目次ファイルを作成するか。省略した場合はnull (作成しない)
# ePUB3においてはこの設定によらず必ず作成される
# mytoc: true

# 表紙にするHTMLファイル。ファイル名を指定すると表紙として入る
# cover: _cover.html
# 表紙に配置し、書籍の影絵にも利用する画像ファイル。省略した場合はnull (画像を使わない)
## cover を付けると kindlegen 2.9 でエラーが出る。無くても同じ表示になる模様。
coverimage: "cover.jpg"
# 表紙の後に大扉ページを作成するか。省略した場合はnull (作成しない)
# titlepage: null
titlepage: true
# 自動生成される大扉ページを上書きするファイル。ファイル名を指定すると大扉として入る
# titlefile: null
titlefile: _cover.html
# 原書大扉ページにするHTMLファイル。ファイル名を指定すると原書大扉として入る
# originaltitlefile: null
# 権利表記ページファイル。ファイル名を指定すると権利表記として入る
# creditfile: null

# プロフィールページファイル。ファイル名を指定すると著者紹介として入る
# profile: null
# プロフィールページの目次上の見出し
# profiletitle: 著者紹介

# 広告ファイル。ファイル名を指定すると広告として入る
# advfile: null

# 奥付を作成するか。デフォルトでは作成されない。trueを指定するとデフォルトの奥付、ファイル名を指定するとそれがcolophon.htmlとしてコピーされる
colophon: true

# 裏表紙ファイル (画像はcoversまたはimagesに配置する)。ファイル名を指定すると裏表紙として入る
# backcover: null

# フックは、各段階で介入したいときのプログラムを指定する。自動で適切な引数が渡される
# プログラムには実行権限が必要

# ファイル変換処理の前に実行するプログラム。スタイルシートのコンパイルをしたいときなどに利用する。
# 渡される引数1=作業用展開ディレクトリ
# hook_beforeprocess: null

# 前付の作成後に実行するプログラム。作業用展開ディレクトリにある目次ファイル(toc-html.txt)を操作したいときなどに利用する。
# 渡される引数1=作業用展開ディレクトリ
# hook_afterfrontmatter: null

# 本文の変換後に実行するプログラム。作業用展開ディレクトリにある目次ファイル(toc-html.txt)を操作したいときなどに利用する。
# 渡される引数1=作業用展開ディレクトリ
# hook_afterbody: null

# 後付の作成後に実行するプログラム。作業用展開ディレクトリにある目次ファイル(toc-html.txt)を操作したいときなどに利用する。
# 渡される引数1=作業用展開ディレクトリ
# hook_afterbackmatter: null

# 画像およびフォントをコピーした後に実行するプログラム。別の画像やフォントを追加したいときなどに利用する。
# 渡される引数1=作業用展開ディレクトリ
# hook_aftercopyimage: null

# ePUB zipアーカイブ直前に実行するプログラム。メタ情報などを加工したいときなどに利用する。
# 渡される引数1=ePUB準備ディレクトリ
# hook_prepack: null

# ハイライトを有効にするか。pygments.gemが必要
# pygments: null

# 取り込む画像が格納されているディレクトリ。省略した場合は以下
# imagedir: images

# 取り込むフォントが格納されているディレクトリ。省略した場合は以下
# fontdir: fonts

# imagedir内から取り込まれる対象となるファイル拡張子。省略した場合は以下
# image_ext: ["png", "gif", "jpg", "jpeg", "svg", "ttf", "woff", "otf"]

# fontdir内から取り込まれる対象となるファイル拡張子。省略した場合は以下
# font_ext: ["ttf", "woff", "otf"]

# 変換したHTMLファイルおよびCSSを解析して厳密に使用している画像ファイルだけを取り込むか。デフォルトはnull(imagesディレクトリすべてを取り込む)
# なお、フォント、カバー、広告についてはこの設定によらずディレクトリ内のものがすべて取り込まれる
# verify_target_images: null
# verify_target_imagesがtrueの状態において、解析で発見されなくても強制的に取り込むファイルの相対パスの配列
# force_include_images: []

# Re:VIEWファイル名を使わず、前付にpre01,pre02...、本文にchap01,chap02l...、後付にpost01,post02...という名前付けルールにするか
# rename_for_legacy: null

# ePUBアーカイブの非圧縮実行
# zip_stage1: "zip -0Xq"
# ePUBアーカイブの圧縮実行
# zip_stage2: "zip -Xr9Dq"
# ePUBアーカイブに追加するパス(デフォルトはmimetype、META-INF、OEBPS)
# zip_addpath: null

# 以下は古いreview-epubmaker実装で使用されていたパラメータで、
# 互換性のために同じ機能を提供しているが、将来廃止予定であり、使うべきではない。
#
# ヘッダ・フッタのない、表紙のHTMLファイル。
# (※ヘッダ・フッタを入れたcoverを使うように変更することを勧告する。)
# coverfile: null
# ヘッダ・フッタのない、大扉ページ差し替えのHTMLファイル。
# (※ヘッダ・フッタを入れたtitlefileを使うように変更することを勧告する。)
# titlepagefile: null
# ヘッダ・フッタのない、裏表紙のHTMLファイル。
# (※ヘッダ・フッタを入れたbackcoverを使うように変更することを勧告する。)
# backcoverfile: null
# 奥付の日付文字列。
# (※history配列を使うように変更することを勧告する。)
# pubhistory: 奥付履歴文字列
pubhistory: |
  2014年11月1日 v1.0.0版発行
# history を使うよう勧告されているが、実際に使用してみるとエラーになる
# history: ["2014年11月1日 v1.0.0版発行"]
texstyle: samplemacro # なくても PDF は作成されるが、フォントなどがおかしくなる
debug: true
